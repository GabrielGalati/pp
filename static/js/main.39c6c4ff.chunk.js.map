{"version":3,"sources":["fonts/Ubuntu-Bold.ttf","fonts/SpaceMono-Regular.ttf","fonts/Merriweather-Regular.ttf","stores/UserStore.js","components/login-components/InputField.js","components/login-components/SubmitButton.js","services/api.js","services/i.js","pages/LoginForm.js","components/login-components/Login.js","pages/RegisterForm.js","services/User.js","pages/Nomina.js","components/footer/footer.js","components/navbar.js","pages/ficha de personal/fichaDePersonal.js","pages/empleados/Empleados.js","pages/newEmpleado.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","API","createBrowserHistory","LoginForm","state","password","dat","buttonDisabled","property","val","trim","length","setState","email","axios","post","name","then","response","data","login","history","push","window","location","reload","alert","catch","err","console","log","setInputValue","onSubmit","Login","fetch","method","headers","res","json","result","success","UserStore","loadin","observer","RegisterForm","user","newUser","to","pathname","Nomina","Footer","class","navbar","href","fichaDePersonal","componentDidMount","a","isLoading","get","posts","error","isLoaded","styled","Link","Empleados","empleado","id","checked","for","apellidos","cargo","clase_personal","banco","numero_de_cuenta","newEmpleado","nombres","cedula","sexo","telefono","App","path","exact","component","Register","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.39c6c4ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ubuntu-Bold.e00e2a77.ttf\";","module.exports = __webpack_public_path__ + \"static/media/SpaceMono-Regular.52eb73db.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Merriweather-Regular.c97a9fc2.ttf\";","import { extendObservable } from 'mobx';\r\n\r\n/** \r\n * User Store\r\n * \r\n*/\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component{\r\n  render(){ \r\n      return (\r\n        <div className=\"inputField\">\r\n            <input\r\n                className='input'\r\n                type={this.props.type}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange= { (e) => this.props.onChange(e.target.value) }\r\n            />\r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n\r\n        <button\r\n          className='btn btn-primary'\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","const API = \"http://97b04f6b0765.ngrok.io\"\r\n\r\n\r\n\r\nexport default API","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory(); ","import React from 'react';\r\nimport InputField from '../components/login-components/InputField';\r\nimport SubmitButton from '../components/login-components/SubmitButton';\r\nimport UserStore from '../stores/UserStore';\r\nimport axios from 'axios'\r\nimport { login } from '../services/User'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\nimport { Redirect } from 'react-router-dom'\r\nimport history from '../services/i'\r\nconst API = \"http://localhost:4000\"\r\n\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      dat: '',\r\n      buttonDisabled: false\r\n    }\r\n\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n\r\n\r\n\r\n    // if (this.state.username === \"vyza\" && this.state.password === \"vyza\") {\r\n    //   console.log(\"-----------\" + this.state.username + \"-----------\" + this.state.password)\r\n\r\n    //   history.push('/nomina')\r\n    //   window.location.reload(true);\r\n\r\n    // }\r\n    // else {\r\n    //   console.log(\"---------------\" + this.state.username)\r\n    //   console.log(this.state.username)\r\n    //   alert(\"usario incorrecto\")\r\n    // }\r\n\r\n\r\n\r\n\r\n    const user = {\r\n      email: this.state.email,\r\n      name: this.state.password\r\n    }\r\n    axios\r\n      .post(`${API}/api/users/login`, {\r\n        name: this.state.username,\r\n        password: this.state.password\r\n\r\n      })\r\n      .then(response => {\r\n        if (response.data.login) {\r\n          history.push('/nomina')\r\n          window.location.reload(true);\r\n        } else if (!response.data.login) {\r\n          alert(\"usario incorrecto\")\r\n        }\r\n\r\n\r\n      })\r\n      .catch(err => {\r\n        alert(\"usario incorrecto\")\r\n        console.log(err)\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"loginForm\">\r\n\r\n        <h3 className=\"Loginh3\">Bienvenido a \"Empresa\"</h3>\r\n        <InputField\r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          placeholder='Password'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n        />\r\n\r\n        <div className=\"boton\">\r\n          <SubmitButton\r\n            text='Login'\r\n            disabled={this.state.buttonDisabled}\r\n            onClick={() => this.onSubmit()}\r\n          />\r\n        </div>\r\n\r\n        <br />\r\n        <div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm; \r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport UserStore from '../../stores/UserStore';\r\nimport LoginForm from '../../pages/LoginForm';\r\nimport SubmitButton from './SubmitButton';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  async componentDidMount() {\r\n\r\n    try {\r\n\r\n      let res = await fetch('/isLoggedIn', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'applications/json',\r\n          'Content-Type': 'applications/json'\r\n        }\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success) {\r\n        UserStore.loadin = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n\r\n    }\r\n\r\n    catch (e) {\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n\r\n  }\r\n\r\n  async doLogout() {\r\n\r\n    try {\r\n\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'applications/json',\r\n          'Content-Type': 'applications/json'\r\n        }\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n      }\r\n\r\n    }\r\n\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (UserStore.loading) {\r\n      return (\r\n        <div className=\"LoginCSS h-100 d-flex justify-content-center align-items-center\">\r\n          <div className='containerLogin'>\r\n            Cargando, porfavor espere...\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else {\r\n\r\n      if (UserStore.isLoggedIn) {\r\n        return (\r\n          <div className=\"LoginCSS h-100 d-flex justify-content-center align-items-center\">\r\n            <div className='containerLogin'>\r\n              Bienvenido {UserStore.username}\r\n\r\n              {/* <SubmitButton\r\n                text={'Cerrar sesion'}\r\n                disabled={false}\r\n                onClick={() => this.doLogout()}\r\n              /> */}\r\n\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className=\"LoginCSS h-100 d-flex justify-content-center align-items-center\">\r\n          <div className='containerLogin'>\r\n\r\n            <LoginForm />\r\n            {/* <SubmitButton\r\n              text={'Cerrar sesion'}\r\n              disabled={false}\r\n              onClick={() => this.doLogout()}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(Login);","\r\nimport React from 'react';\r\nimport InputField from '../components/login-components/InputField';\r\nimport SubmitButton from '../components/login-components/SubmitButton';\r\nimport UserStore from '../stores/UserStore';\r\nimport axios from 'axios'\r\nimport { register } from '../services/User'\r\nimport { Link } from 'react-router-dom'\r\nclass RegisterForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            response: \"\",\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            response: \"\",\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async onSubmit() {\r\n\r\n\r\n        const user = {\r\n            name: this.state.username,\r\n            email: this.state.password\r\n        }\r\n\r\n\r\n\r\n\r\n        await register(user).then(res => {\r\n            console.log(res)\r\n\r\n            if (res) {\r\n                alert(\"asdsd\")\r\n            }\r\n        })\r\n        this.setState.dat = this.state.username\r\n        console.log(this.state.dat)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n\r\n                Register\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={(val) => this.setInputValue('username', val)}\r\n                />\r\n\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={(val) => this.setInputValue('password', val)}\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={(val) => this.setInputValue('password', val)}\r\n                />\r\n\r\n                <SubmitButton\r\n                    text='Registar'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={() => this.onSubmit()}\r\n                />\r\n\r\n                <div>\r\n                    <Link to={{\r\n                        pathname: `/`,\r\n\r\n                    }}>\r\n                        <button className=\"\">\r\n\r\n\r\n                            login\r\n                                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm; ","import axios from 'axios'\r\nimport API from '../services/api'\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n        .post(`${API}/api/users/register`, {\r\n\r\n            email: newUser.email,\r\n            name: newUser.password,\r\n\r\n        })\r\n        .then(response => {\r\n            console.log('Registered')\r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post(`${API}/api/users/login/${user.email}/${user.password}`, {\r\n\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\nexport const changePassword = user => {\r\n    return axios\r\n        .post(`${API}/api/users/changepassword`, {\r\n            email: user.email,\r\n            password: user.password\r\n        })\r\n        .then(response => {\r\n            localStorage.setItem('usertoken', response.data)\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\n\r\nexport const getProfile = user => {\r\n    return axios\r\n        .get(`${API}/api/users/profil`, {\r\n            headers: { Authorization: ` ${this.getToken()}` }\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}","import React, { Component } from 'react'\r\n// import Navbar from '../components/navbar'\r\n\r\nexport default class Nomina extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1 className=\"text-center\">sistema de nomina vyza</h1>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./footer.css\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"footer\">\r\n                <p>copyright vyza</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Route, Link, NavLink } from 'react-router-dom'\r\nimport \"./navbar.css\"\r\nexport default class navbar extends Component {\r\n    render() {\r\n        const CustomLink = ({ activeStyle, children, className, to, activeOnlyWhenExact }) => (\r\n            <Route path={to} exact={activeOnlyWhenExact} children={({ match }) => (\r\n                <Link to={to} className={className} style={match && activeStyle}>{children}</Link>\r\n            )} />\r\n        );\r\n\r\n        return (\r\n            <div className=\"navbar-v1\">\r\n                <div className=\"dropdown-v1\">\r\n                    <button className=\"dropbtn-v1\">archivo\r\n                <i className=\"fa fa-caret-down\"></i>\r\n                    </button>\r\n                    <div className=\"dropdown-content-v1\">\r\n                        <a href=\"#\">respaldo de datos</a>\r\n                        <a href=\"#\">recuperacion de datos</a>\r\n                        <a href=\"#\">impresora</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dropdown-v1\">\r\n                    <button className=\"dropbtn-v1\">datos\r\n                <i className=\"fa fa-caret-down\"></i>\r\n                    </button>\r\n                    <div className=\"dropdown-content-v1\">\r\n                        <Link to={`/fichadepersonal`} className=\"navbar-brand\" href=\"#\" >\r\n\r\n\r\n                            ficha de personal\r\n\r\n                            </Link>\r\n                        <a href=\"#\">asignacion y deduccion</a>\r\n                        <a href=\"#\">Prestamo</a>\r\n                    </div>\r\n                </div>\r\n                <a href=\"#\">ejemplo 1</a>\r\n                <a href=\"#\">ejemplo 2</a>\r\n                <a href=\"#\">ejemplo 3</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Link, NavLink } from 'react-router-dom'\r\nimport './fichaDePersonal.css';\r\nimport history from '../../services/i'\r\nimport API from '../../services/api'\r\nimport styled from 'styled-components';\r\nimport Navbar from '../../components/navbar';\r\n\r\n\r\nclass fichaDePersonal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        // Este codigo retorna todos los posts\r\n        await axios.get(`${API}/api/empleados`)\r\n\r\n            .then(res => this.setState({\r\n\r\n                posts: res.data,\r\n\r\n                isLoading: false\r\n            }))\r\n\r\n            .catch(error => this.setState({\r\n                error,\r\n                isLoading: false\r\n            }));\r\n        console.log(this.state.posts)\r\n    }\r\n    //     // handleClick() {\r\n    //     //     history.push('/nomina')\r\n    //     //     window.location.reload(true);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const StyledLink = styled(Link)`\r\ntext-decoration: none;\r\n\r\n&:focus, &:hover, &:visited, &:link, &:active {\r\n    text-decoration: none;\r\n}\r\n`;\r\n\r\n        const { error, isLoaded, posts } = this.state;\r\n        var i = 1;\r\n        const CustomLink = ({ activeStyle, children, className, to, activeOnlyWhenExact }) => (\r\n            <Route path={to} exact={activeOnlyWhenExact} children={({ match }) => (\r\n                <Link to={to} className={className} style={match && activeStyle}>{children}</Link>\r\n            )} />\r\n        );\r\n\r\n        if (error) {\r\n            return <div>Error al conectarse al servidor</div> //display error if no connect to server\r\n        } else if (isLoaded) {\r\n            return <div>Loading ... </div> //crear componente de carga\r\n        } else {\r\n            return (     //call to component card if server if connect and service data to compoent\r\n\r\n                <div className=\"container\" >\r\n\r\n                    <table class=\"table table-dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Nombres</th>\r\n                                <th scope=\"col\">Apellidos</th>\r\n                                <th scope=\"col\">cargo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                posts.map(post => (\r\n\r\n                                    < tr className=\"a\" >\r\n                                        < th scope=\"row\">{i++}</th>\r\n\r\n                                        <td><NavLink\r\n                                            to={{\r\n                                                pathname: `/empleados/${post.nombres}`,\r\n                                                state: {\r\n                                                    data: post.id\r\n                                                }\r\n                                            }}\r\n                                        >{post.nombres} </NavLink> </td>\r\n                                        <td><NavLink\r\n                                            to={{\r\n                                                pathname: `/empleados/${post.apellidos}`,\r\n                                                state: {\r\n                                                    data: post.id\r\n                                                }\r\n                                            }}\r\n                                            exact activeClassName=\"empleados\"\r\n                                        > {post.apellidos} </NavLink></td>\r\n                                        <td><NavLink\r\n                                            to={{\r\n                                                pathname: `/empleados/${post.cargo}`,\r\n                                                state: {\r\n                                                    data: post.id\r\n                                                }\r\n                                            }}\r\n                                            exact activeClassName=\"empleados\"\r\n                                        > {post.cargo} </NavLink></td>\r\n\r\n\r\n                                    </tr>\r\n\r\n                                ))\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <Link to={{\r\n                        pathname: `/nomina`,\r\n\r\n                    }}>\r\n                        <button className=\"\">\r\n\r\n\r\n                            atras\r\n                                    </button>\r\n                    </Link>\r\n                    <Link to={{\r\n                        pathname: `/nuevoempleado`,\r\n\r\n                    }}>\r\n                        <button className=\"\">\r\n\r\n\r\n                            nuevo empleado\r\n                                    </button>\r\n                    </Link>\r\n                </div >\r\n\r\n            );\r\n        }\r\n    }\r\n}// final de la clase\r\n\r\n\r\n\r\nexport default fichaDePersonal;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../../components/navbar'\r\nimport API from '../../services/api'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport './empleados.css';\r\n\r\nexport default class Empleados extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            empleado: []\r\n\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        console.log(\"datos\" + this.props.location.state.data)\r\n\r\n        const res = await axios.get(`${API}/api/empleados/${this.props.location.state.data}`)\r\n            .then(res => this.setState({\r\n                empleado: res.data[0]\r\n\r\n            }))\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { empleado } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"cuadro\"  >\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">ficha personal : </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked />\r\n                            <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                                V\r\n  </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" />\r\n                            <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                                E\r\n  </label>\r\n                        </div>\r\n\r\n                        <div className=\"col\">Cedula de internet:</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-8\">Apellido: {empleado.apellidos}</div>\r\n                        <div className=\"col-4\">Nombres:{empleado.apellidos}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\">satus: {empleado.cargo}</p>\r\n                        <p className=\"col-12\" >cargo: {empleado.cargo}</p>\r\n                        <p className=\"col-12\" >clase personal:  {empleado.clase_personal}</p>\r\n                        <p className=\"col-12\" >banco:  {empleado.banco}</p>\r\n                        <p className=\"col-12\">N de cuenta:  {empleado.numero_de_cuenta}</p>\r\n                    </div>\r\n                </div>\r\n                <Link to={{\r\n                    pathname: `/md`,\r\n\r\n                }}>\r\n                    <button className=\"btn btn-success\">\r\n\r\n\r\n                        modificar\r\n                                    </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport InputField from '../components/login-components/InputField';\r\nimport SubmitButton from '../components/login-components/SubmitButton';\r\nimport axios from 'axios'\r\nimport history from '../services/i'\r\nconst API = \"http://localhost:4000\"\r\nexport default class newEmpleado extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nombres: '',\r\n            apellidos: '',\r\n            cedula: '',\r\n            cargo: '',\r\n            sexo: '',\r\n            telefono: ''\r\n        }\r\n\r\n    }\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 40) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n        axios\r\n            .post(`${API}/api/empleados`, {\r\n                nombres: this.state.nombres,\r\n                apellidos: this.state.apellidos,\r\n                cedula: this.state.cedula,\r\n                cargo: this.state.cargo,\r\n                sexo: this.state.sexo,\r\n                telefono: this.state.telefono\r\n\r\n            })\r\n            .then(response => {\r\n                if (response.data.login) {\r\n                    history.push('/nomina')\r\n                    window.location.reload(true);\r\n                    alert(\"usario creado\")\r\n                } else if (!response.data.login) {\r\n                    history.push('/nomina')\r\n                    window.location.reload(true);\r\n                    alert(\"usario creado\")\r\n                }\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                alert(\"usario creado\")\r\n                history.push('/nomina')\r\n                window.location.reload(true);\r\n                console.log(err)\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"loginForm \">\r\n\r\n                <h3 className=\"Loginh3\">Agregar Nuevo Empleado</h3>\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='nombres'\r\n                    value={this.state.nombres ? this.state.nombres : ''}\r\n                    onChange={(val) => this.setInputValue('nombres', val)}\r\n                />\r\n\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='apellidos'\r\n                    value={this.state.apellidos ? this.state.apellidos : ''}\r\n                    onChange={(val) => this.setInputValue('apellidos', val)}\r\n                />\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='cedula'\r\n                    value={this.state.cedula ? this.state.cedula : ''}\r\n                    onChange={(val) => this.setInputValue('cedula', val)}\r\n                />\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='cargo'\r\n                    value={this.state.cargo ? this.state.cargo : ''}\r\n                    onChange={(val) => this.setInputValue('cargo', val)}\r\n                />\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='sexo'\r\n                    value={this.state.sexo ? this.state.sexo : ''}\r\n                    onChange={(val) => this.setInputValue('sexo', val)}\r\n                />\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='telefono'\r\n                    value={this.state.telefono ? this.state.telefono : ''}\r\n                    onChange={(val) => this.setInputValue('telefono', val)}\r\n                />\r\n\r\n                <div className=\"boton\">\r\n                    <SubmitButton\r\n                        text='Login'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={() => this.onSubmit()}\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Login from './components/login-components/Login';\r\nimport Register from './pages/RegisterForm'\r\nimport Nomina from './pages/Nomina'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport history from './services/i'\r\nimport Footer from './components/footer/footer'\r\nimport fichaDePersonal from './pages/ficha de personal/fichaDePersonal'\r\nimport Empleados from './pages/empleados/Empleados'\r\nimport Navbar from './components/navbar';\r\nimport newEmpleado from './pages/newEmpleado'\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"app\" >\r\n        <header><Navbar /></header>\r\n        <Router history={history}>\r\n\r\n          <Switch>\r\n\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/nomina\" component={Nomina} />\r\n            <Route path=\"/fichadepersonal\" component={fichaDePersonal} />\r\n            <Route path=\"/empleados/:id\" component={Empleados} />\r\n            <Route path=\"/nuevoempleado\" component={newEmpleado} />\r\n\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport history from './services/i'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport './fonts/Ubuntu-Bold.ttf'\r\nimport './fonts/SpaceMono-Regular.ttf'\r\nimport './fonts/Merriweather-Regular.ttf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}